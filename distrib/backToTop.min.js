(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "vm"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("vm"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.vm);
    global.htmlex = mod.exports;
  }
})(this, function (exports, _vm) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BackToTop = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var BackToTop = exports.BackToTop = function () {
    function BackToTop(config) {
      _classCallCheck(this, BackToTop);

      var ctx = this;
      this.config = Object.assign({ incY: 50, timer: 200, class: "backToTop" }, config);
      var style = Object.assign({ display: "none", bottom: "20px", right: "20px" }, this.config.style);
      this.container = newElement("div", { class: this.config.class }, "", { click: this.scrollToTop.bind(this, ctx) }, style);
      document.body.beforeEnd(this.container);
      window.on("scroll", this.shouldShowScroller.bind(this, ctx));
    }

    _createClass(BackToTop, [{
      key: "shouldShowScroller",
      value: function shouldShowScroller() {
        this.container.show(document.body.scrollTop > 20 || document.documentElement.scrollTop > 20);
      }
    }, {
      key: "scrollUntilTop",
      value: function scrollUntilTop() {
        var ctx = this;
        var y = window.pageYOffset;
        window.scrollTo(0, y - ctx.config.incY);
        if (y > 0) {
          window.setTimeout(function () {
            ctx.scrollToTop.bind(ctx).call();
          }, ctx.config.timer);
        }
      }
    }, {
      key: "scrollToTop",
      value: function scrollToTop() {
        var ctx = this;
        if (ctx.config.timer === 0) {
          window.scrollTo(0, 0);
        } else {
          ctx.scrollUntilTop();
        }
      }
    }]);

    return BackToTop;
  }();
});